<?php

namespace Dizzy\RssReaderBundle\Entity;

use DateTime;
use Doctrine\Common\Collections\Criteria;
use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\Query;
use Doctrine\ORM\Query\Expr;
use DateInterval;

/**
 * UserRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class UserRepository extends EntityRepository
{


    public function getNewUsersCountForDay(DateTime $date)
    {
        $dateFrom = clone($date);
        $dateFrom->setTime(0, 0, 0);
        $dateTo = clone($date);
        $dateTo->setTime(23, 59, 59);

        $result = $this->_em
            ->createQuery(
                "SELECT count(u)
                  FROM Dizzy\RssReaderBundle\Entity\User u
                  WHERE u.registered BETWEEN :dateFrom AND :dateTo"
            )
            ->setParameter('dateFrom', $dateFrom)
            ->setParameter('dateTo', $dateTo)
            ->getSingleScalarResult();

        return $result;
    }

    /**
     * Возвращает статистику по количеству пользователей за 30 дней
     *
     * @return array
     */
    public function getUsersStat(){
        $from = new DateTime();
        $from->sub(new DateInterval('P30D'));
        $from->setTime(23,59,58);
        $to = new DateTime();
        $to->setTime(23,59,59);

        $result = [];
        foreach (new \DatePeriod($from, new DateInterval('P1D'), $to) as $date) {
            $count = intval($this->_em->createQuery('
                SELECT COUNT(u) FROM Dizzy\RssReaderBundle\Entity\User u WHERE u.registered<=:date
            ')->setParameter('date',$date)->getSingleScalarResult());
            $result['values'][] = $count;
            $result['labels'][] = $date->format('d.m.Y');

        }

        return $result;
    }
}
